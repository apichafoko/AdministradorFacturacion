@{
    ViewData["Title"] = "Subir Archivo Excel";

}

@model IndexViewModel


<h2>Subir Archivo Excel</h2>

<form asp-action="Index" asp-controller="Home" enctype="multipart/form-data" method="post">
    <div class="form-group">
        <label for="file">Seleccionar archivo Excel:</label>
        <input type="file" name="file" class="form-control" accept=".xls,.xlsx" required />
        <button type="submit" class="btn btn-primary" style="margin: 2px">Subir</button>
        <p id="progressText">Progreso: 0%</p>
    </div>

</form>

<div id="progressContainer">
    <div id="progressBar" style="width: 0%; height: 30px; background-color: green;"></div>
</div>
@if (Model.ListadoBoletas != null)
{


<div class="container mt-5">
    <!-- Pestañas -->
    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="datos-generales-tab" data-bs-toggle="tab" data-bs-target="#datos-generales" type="button" role="tab" aria-controls="datos-generales" aria-selected="true">Datos Generales</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="datos-lastperiod-tab" data-bs-toggle="tab" data-bs-target="#datos-lastperiod" type="button" role="tab" aria-controls="datos-lastperiod" aria-selected="false">Datos Generales del último período</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="publico-tab" data-bs-toggle="tab" data-bs-target="#publico" type="button" role="tab" aria-controls="publico" aria-selected="false">Público</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="privado-tab" data-bs-toggle="tab" data-bs-target="#privado" type="button" role="tab" aria-controls="privado" aria-selected="false">Privado y OS</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="boletas-tab" data-bs-toggle="tab" data-bs-target="#boletas" type="button" role="tab" aria-controls="boletas" aria-selected="false">Boletas</button>
        </li>
    </ul>

    <!-- Contenido de las Pestañas -->
    <div class="tab-content" id="myTabContent">
        <!-- Tab Datos Generales -->
        <div class="tab-pane fade show active" id="datos-generales" role="tabpanel" aria-labelledby="datos-generales-tab">
            <div class="container-fluid bg-primary text-white py-3">
                <h1 class="text-center">Datos Generales</h1>
            </div>
            <div class="container-fluid mt-4">
                <div class="row">
                    <!-- Tarjeta 1 -->
                    <div class="col-lg-3 col-md-6 mb-4">
                        <div class="card text-center shadow-sm">
                            <div class="card-body">
                                <h2 class="card-title display-4 text-primary">@Model.CantidadBoletasProceadas</h2>
                                <p class="card-text">¿Cuántas boletas se procesaron?</p>
                            </div>
                        </div>
                    </div>
                    <!-- Tarjeta 2 -->
                    <div class="col-lg-3 col-md-6 mb-4">
                        <div class="card text-center shadow-sm">
                            <div class="card-body">
                                <h2 class="card-title display-4 text-primary">@Model.CantidadBoletasConPagos</h2>
                                <p class="card-text">¿Cuántas boletas recibieron algún pago?</p>
                            </div>
                        </div>
                    </div>
                    <!-- Gráfico -->
                    <div class="col-lg-6 col-md-12 mb-4">
                        <div class="card shadow-sm">
                            <div class="card-body">
                                <h5 class="card-title">¿Qué día de la semana trabajo más? (Hístorico)</h5>
                                <div>
                                    <canvas id="graficoBoletas"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="tab-pane fade" id="datos-lastperiod" role="tabpanel" aria-labelledby="datos-lastperiod-tab">
            <div class="container-fluid bg-primary text-white py-3">
                <h1 class="text-center">Datos del Último Período</h1>
            </div>
            <div class="container-fluid mt-4">
                <div class="row">
                    <!-- Tarjeta 1 -->
                    <div class="col-lg-12 col-md-6 mb-4">
                        <div class="card text-center shadow-sm">
                            <div class="card-body">
                                <h2 class="card-title display-4 text-primary">@Model.LastYear - @Model.LastPeriod</h2>
                                <p class="card-text">Último Período procesado</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container-fluid mt-4">
                <div class="row">
                    <!-- Tarjeta 1 -->
                    <div class="col-lg-3 col-md-6 mb-4">
                        <div class="card text-center shadow-sm">
                            <div class="card-body">
                                <h2 class="card-title display-4 text-primary">@Model.CantidadBoletasPublicas</h2>
                                <p class="card-text">¿Cuántas boletas fueron del sistema público?</p>
                            </div>
                        </div>
                    </div>
                    <!-- Tarjeta 2 -->
                    <div class="col-lg-3 col-md-6 mb-4">
                        <div class="card text-center shadow-sm">
                            <div class="card-body">
                               <h2 class="card-title display-4 text-primary">@Model.CantidadBoletasPrivadas</h2>
                                <p class="card-text">¿Cuántas boletas fueron del sistema privado?</p>
                            </div>
                        </div>
                    </div>
                
                    <!-- Gráfico -->
                    <div class="col-lg-6 col-md-6 mb-4">
                        <div class="card shadow-sm">
                            <div class="card-body">
                                <h5 class="card-title">¿Qué día de la semana trabajé más el último período?</h5>
                                <div>
                                    <canvas id="graficoBoletaslastperiod"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                    </div>
            </div>
        </div>

        <!-- Tab Público -->
        <div class="tab-pane fade" id="publico" role="tabpanel" aria-labelledby="publico-tab">
            <div class="container-fluid bg-primary text-white py-3">
                <h1 class="text-center">Ingresos y Egresos</h1>
            </div>
            <div class="container-fluid mt-4">
                <div class="row">
                    <!-- Tarjeta 1 -->
                    <div class="col-lg-6 col-md-6 mb-4">
                        <div class="card text-center shadow-sm">
                            <div class="card-body">
                                <h2 class="card-title display-4 text-primary">@Model.LastYear - @Model.LastPeriod</h2>
                                <p class="card-text">Último Período procesado</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 mb-4">
                        <div class="card text-center shadow-sm">
                            <div class="card-body">
                                <h2 class="card-title display-4 text-primary">@Model.CantidadBoletasPublicas</h2>
                                <p class="card-text">Cantidad de boletas públicas</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container-fluid mt-4">
                <div class="row">
                    <!-- Tarjeta 1 -->
                    <div class="col-lg-6 col-md-6 mb-4">
                        <div class="card text-center shadow-sm">
                            <div class="card-body">
                                <h2 class="card-title display-4 text-primary">$ @String.Format("{0:N2}", @Model.IngresoPromedioUltimoBrutoPublico)</h2>
                                <p class="card-text">Facturación bruta del Último Período <b>(@Model.LastPeriod - @Model.LastYear)</b></p>
                            </div>
                        </div>
                    </div>
                    <!-- Tarjeta 2 -->
                    <div class="col-lg-6 col-md-6 mb-4">
                        <div class="card text-center shadow-sm">
                            <div class="card-body">
                                <h2 class="card-title display-4 text-primary">$ @String.Format("{0:N2}", @Model.PromedioBoletaUltimoMesPublico)</h2>
                                <p class="card-text">Boleta Promedio Último Período <b>(@Model.LastPeriod - @Model.LastYear)</b></p>
                            </div>
                        </div>
                    </div>
                </div>
                 <div class="row">
                    <!-- Tarjeta 3 -->
                    <div class="col-lg-6 col-md-6 mb-4">
                        <div class="card text-center shadow-sm">
                            <div class="card-body">
                                <h2 class="card-title display-4 text-primary">$ @String.Format("{0:N2}", @Model.BoletaMayorValorU3MPublico)</h2>
                                <p class="card-text">Boleta de mayor valor del Último Período <b>(@Model.LastPeriod - @Model.LastYear)</b></p>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 mb-4">
                        <div class="card text-center shadow-sm">
                            <div class="card-body">
                                <h2 class="card-title display-4 text-primary">$ @String.Format("{0:N2}", @Model.BoletaMenorValorU3MPublico)</h2>
                                <p class="card-text">Boleta de menor valor del Último Período <b>(@Model.LastPeriod - @Model.LastYear)</b></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container mt-5">
                <div class="row">
                    <div class="col-12">
                        <h3 class="mb-4">Evolución de los Ingresos Mensuales <b>(Últimos 12 meses)</b></h3>
                        <div class="card">
                            <div class="card-body">
                                <canvas id="graficoIngresos"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container mt-5">
                <div class="row">
                    <div class="col-12">
                        <h3 class="mb-4">Evolución de la Cantidad de Boletas Mensuales <b>(Últimos 12 meses)</b></h3>
                        <div class="card">
                            <div class="card-body">
                                <canvas id="graficoCantidadMesPublicas"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container mt-5">
                <h3 class="mb-4">Distribución de Boletas por Mutual <b>(Último Mes)</b></h3>
                    <div class="card">
                        <div class="card-body">
                            <canvas id="graficoMutuales" style="max-width: 400px; max-height: 400px;"></canvas>
                        </div>
                    </div>
            </div>
            <div class="container mt-5">
                <div class="row">
                    <div class="col-12">
                        <h3 class="mb-4">Saldos Mensuales</h3>
                        <div class="table-responsive">
                        <table id="tablaSaldosMensualesPublicos" class="table table-bordered table-hover align-middle display nowrap" style="width:100%">
                                <thead class="table-light">
                                    <tr>
                                        <th>Periodo</th>
                                        <th>Porcentaje del total abonado</th>
                                        <th>Importe Pendiente</th>
                                        <th>Importe Facturado (Bruto)</th>
                                        <th>Importe Debitado (Bruto)</th>
                                        <th>Importe Abonado (Bruto)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.SaldosMensualesPublico)
                                    {
                                        <tr>
                                            <td>@item.Periodo</td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <span>@String.Format("{0:N2}%", item.PorcentajeCobrado)</span>
                                                    <div class="progress ms-2 w-100" style="height: 20px;">
                                                        <div class="progress-bar" role="progressbar" style="width: @item.PorcentajeCobrado.ToString("N0")%;" aria-valuenow="@item.PorcentajeCobrado" aria-valuemin="0" aria-valuemax="100"></div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>@String.Format("{0:C}", item.ImportePendiente)</td>
                                            <td>@String.Format("{0:C}", item.ImporteFacturadoBruto)</td>
                                            <td>@String.Format("{0:C}", item.ImporteDebitadoBruto)</td>
                                            <td>@String.Format("{0:C}", item.ImporteCobradoBruto)</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

            </div>
            <div class="container mt-5">
                <h3 class="mb-4">Montos Próximos a Cobrar por Periodo</h3>
                <div class="card">
                    <div class="card-body">
                        <canvas id="graficoMontosCobrar" style="max-width: 800px; max-height: 400px;"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Tab Privado -->
        <div class="tab-pane fade" id="privado" role="tabpanel" aria-labelledby="privado-tab">
            
        </div>

        <!-- Tab Boletas -->
        <div class="tab-pane fade" id="boletas" role="tabpanel" aria-labelledby="boletas-tab">
            
        </div>
    </div>
</div>


   
}


@section Scripts
{
        <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>

    <!-- Bootstrap -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- SignalR -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.9/signalr.min.js"></script>

    <!-- Chart.js -->
    <<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css">

    <!-- DataTables JS -->
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>

    <!-- DataTables Buttons (para exportación) -->
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.3.6/css/buttons.dataTables.min.css">
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.html5.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>

   <script type="text/javascript">

    
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/progressHub")
        .build();

    connection.on("ReceiveProgress", function (porcentaje) {
        // Actualizar la barra de progreso
        document.getElementById("progressBar").style.width = porcentaje + "%";
        document.getElementById("progressText").innerText = "Progreso: " + porcentaje + "%";
    });

    connection.start().catch(function (err) {
        return console.error(err.toString());
    });
    
    
    </script>


<script type="text/javascript">
    
    var cantidadBoletasDia = @Html.Raw(Json.Serialize(Model.CantidadBoletasDia));

    var data = Object.values(cantidadBoletasDia); // Valores del diccionario (cantidad de boletas)


    var ctx = document.getElementById('graficoBoletas').getContext('2d');
    var graficoBoletas = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
             datasets: [{
                label: 'Cantidad de Boletas',
                data: data,
                backgroundColor: 'rgba(75, 192, 75, 0.6)',
                borderColor: 'rgba(75, 192, 75, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>
<script type="text/javascript">
    
    var cantidadBoletasDia = @Html.Raw(Json.Serialize(Model.CantidadBoletasDiaLastPeriod));

    var data = Object.values(cantidadBoletasDia); // Valores del diccionario (cantidad de boletas)


    var ctx = document.getElementById('graficoBoletaslastperiod').getContext('2d');
    var graficoBoletas = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
             datasets: [{
                label: 'Cantidad de Boletas',
                data: data,
                backgroundColor: 'rgba(75, 192, 75, 0.6)',
                borderColor: 'rgba(75, 192, 75, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>
<script type="text/javascript">
    // Formatear los periodos en formato "YYYY - MM"
    var periodos = @Html.Raw(Json.Serialize(Model.IngresosMensualesPublico.Keys.Select(p => p.ToString("yyyy - MM"))));
    var ingresos = @Html.Raw(Json.Serialize(Model.IngresosMensualesPublico.Values));

    // Configurar el gráfico
    var ctx = document.getElementById('graficoIngresos').getContext('2d');
    var graficoIngresos = new Chart(ctx, {
        type: 'line',
        data: {
            labels: periodos, // Eje X: Periodos (meses formateados como YYYY - MM)
            datasets: [{
                label: 'Ingresos Mensuales',
                data: ingresos, // Eje Y: Ingresos
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 2,
                fill: true, // Para llenar el área debajo de la línea
                tension: 0.1 // Suavizado de la curva
            }
]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                x: {
                    title: {
                        display: true,
                        text: 'Periodo (Meses)'
                    }
                },
                y: {
                    beginAtZero: false, // No comenzar desde cero para que los montos se ajusten mejor
                    title: {
                        display: true,
                        text: 'Monto (Ingresos)'
                    },
                    ticks: {
                        callback: function(value, index, values) {
                            return '$' + value.toLocaleString();
                        }
                    }
                }
            },
            plugins: {
                tooltip: {
                    callbacks: {
                          label: function(context) {
                            // Mostrar el valor con el símbolo de $ en el tooltip
                            let label = context.dataset.label || '';
                            if (label) {
                                label += ': ';
                            }
                            label += '$' + context.raw.toLocaleString(); // Formatear el valor con $
                            return label;
                        }
                    }
                }
            }
        }
        
    });
</script>
<script type="text/javascript">
    // Formatear los periodos en formato "YYYY - MM"
    var valorX = @Html.Raw(Json.Serialize(Model.CantidadBoletasMensualesPublico.Keys.Select(p => p.ToString("yyyy - MM"))));
    var valorY = @Html.Raw(Json.Serialize(Model.CantidadBoletasMensualesPublico.Values));

    // Configurar el gráfico
    var ctx = document.getElementById('graficoCantidadMesPublicas').getContext('2d');
    var graficoIngresos = new Chart(ctx, {
        type: 'line',
        data: {
            labels: valorX, // Eje X: Periodos (meses formateados como YYYY - MM)
            datasets: [{
                label: 'Cantidad de Boletas Mensuales',
                data: valorY, // Eje Y: Ingresos
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 2,
                fill: true, // Para llenar el área debajo de la línea
                tension: 0.1 // Suavizado de la curva
            }
]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                x: {
                    title: {
                        display: true,
                        text: 'Periodo (Meses)'
                    }
                },
                y: {
                    beginAtZero: false, // No comenzar desde cero para que los montos se ajusten mejor
                    title: {
                        display: true,
                        text: 'Cantidad de Boletas'
                    }
                }
            }
        }
        
    });
</script>>
<script type="text/javascript">
    $(document).ready(function() {
        $('#tablaSaldosMensualesPublicos').DataTable({
            paging: true, // Habilitar paginación
            pageLength: 12, // Mostrar 12 registros por página
            lengthChange: true, // Permitir al usuario cambiar la cantidad de registros
            searching: true, // Habilitar búsqueda
            ordering: true, // Permitir ordenar columnas
            info: true, // Mostrar información del número de registros
            autoWidth: false, // Auto-ajuste de ancho de columnas
            responsive: true, // Habilitar responsividad
            dom: 'Bfrtip', // Elementos a incluir (B=botones, f=buscador, r=progreso, t=tabla, i=información, p=paginación)
            buttons: [
                'copy', 'csv', 'excel', 'pdf' // Botones de exportación
            ],
            order: [], // Desactiva el orden automático
            language: {
                url: 'https://cdn.datatables.net/plug-ins/2.1.8/i18n/es-ES.json' // Cargar traducción en español
            }
        });
    });
</script>

<script type="text/javascript">
    // Obtener las entidades (las claves del diccionario) y las cantidades (los valores)
    var entidades = @Html.Raw(Json.Serialize(Model.CantidadBoletasPorMutualPublico.Keys));
    var cantidades = @Html.Raw(Json.Serialize(Model.CantidadBoletasPorMutualPublico.Values));

    // Calcular el total de boletas
    var totalBoletas = cantidades.reduce((a, b) => a + b, 0); // Suma total de boletas

    // Configurar el gráfico de torta
    var ctx = document.getElementById('graficoMutuales').getContext('2d');
    var graficoMutuales = new Chart(ctx, {
        type: 'pie', // Tipo de gráfico
        data: {
            labels: entidades, // Entidades como etiquetas del gráfico
            datasets: [{
                label: 'Cantidad de Boletas por Mutual',
                data: cantidades, // Cantidades como los valores del gráfico
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(99, 255, 132, 0.2)'
                ], // Colores para cada porción de la torta
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(99, 255, 132, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false, // Permitir que el gráfico respete el tamaño asignado
            plugins: {
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            var entidad = context.label || '';
                            var cantidad = context.raw || 0;
                            var porcentaje = ((cantidad / totalBoletas) * 100).toFixed(2); // Calcular porcentaje

                            // Construir el texto del tooltip
                            var label = entidad + ': ' + cantidad.toLocaleString() + ' boletas'; // Cantidad de boletas por mutual
                            label += ' (' + porcentaje + '% del total)'; // Porcentaje del total

                            return label;
                        },
                        afterLabel: function(context) {
                            // Mostrar la cantidad total de boletas en el tooltip
                            return 'Total boletas: ' + totalBoletas.toLocaleString();
                        }
                    }
                }
            }
        }
    });
</script>


<script type="text/javascript">
    // Obtener los períodos (X) y los montos por entidad (Y) del ViewModel
    var periodos = @Html.Raw(Json.Serialize(Model.MontosProximosACobrarPublico.Select(p => p.Periodo)));

    // Obtener las entidades y los montos por entidad, prepararlos para Chart.js
    var entidades = @Html.Raw(Json.Serialize(Model.MontosProximosACobrarPublico.SelectMany(p => p.MontosPorEntidad.Keys).Distinct()));
    var montosPorPeriodoYEntidad = @Html.Raw(Json.Serialize(Model.MontosProximosACobrarPublico.Select(p => p.MontosPorEntidad)));

    // Crear los datasets para cada entidad
    var datasets = [];
    entidades.forEach(function(entidad, i) {
        // Crear un arreglo de montos para la entidad correspondiente en cada período
        var data = montosPorPeriodoYEntidad.map(function(montosPorEntidad) {
            return montosPorEntidad[entidad] || 0; // Si no hay datos para la entidad en ese período, poner 0
        });

        // Crear dataset para cada entidad
        datasets.push({
            label: entidad,
            data: data, // Montos para cada período
            backgroundColor: getRandomColor(), // Color aleatorio para cada entidad
            borderColor: 'rgba(0, 0, 0, 1)',
            borderWidth: 1
        });
    });

    // Función para generar colores aleatorios
    function getRandomColor() {
        var r = Math.floor(Math.random() * 255);
        var g = Math.floor(Math.random() * 255);
        var b = Math.floor(Math.random() * 255);
        return 'rgba(' + r + ', ' + g + ', ' + b + ', 0.6)';
    }

    // Configurar el gráfico de barras apiladas
    var ctx = document.getElementById('graficoMontosCobrar').getContext('2d');
    var graficoMontosCobrar = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: periodos, // Eje X: Períodos (mes y año)
            datasets: datasets // Datos desglosados por entidad
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                x: {
                    title: {
                        display: true,
                        text: 'Periodo (Mes y Año)'
                    }
                },
                y: {
                    beginAtZero: true,
                    stacked: true, // Apilar las barras
                    title: {
                        display: true,
                        text: 'Monto Próximo a Cobrar'
                    },
                    ticks: {
                        callback: function(value) {
                            return '$' + value.toLocaleString(); // Formatear los montos con $
                        }
                    }
                }
            },
            plugins: {
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            var label = context.dataset.label || '';
                            var valor = context.raw || 0;
                            label += ': $' + valor.toLocaleString(); // Formatear el valor con $
                            return label;
                        }
                    }
                }
            }
        }
    });
</script>

}




@if (ViewBag.Message != null)
{
    <div class="alert alert-info">
        @ViewBag.Message
    </div>
}
